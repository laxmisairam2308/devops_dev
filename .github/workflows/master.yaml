name: internal

on:
  push:
    branches: [master]

env:
  AWS_REGION: us-east-1
  IMAGE_TAG: master
  ECR_REGISTRY: kandula17
  ECR_REPOSITORY: devops-internal
  EKS_CLUSTER_NAME: sree
  DOCKERHUB_REPOSITORY_NAME : kandula17/devops-internal

jobs:
  build:
    runs-on: [self-hosted , dev]

    steps:
      - uses: actions/checkout@v3
      - name: Checkout Source code
        id: checkout
        run: echo "test"

  #    - name: set lower case repository name
  #      id: lc-repository
  #      run: |
  #        echo "REPOSITORY_LC=${REPOSITORY,,}" >>${GITHUB_ENV}
  #      env:
  #        REPOSITORY: "${{ github.repository }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your region          

      - name: Log in to DockerHub
        run: sudo echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
 
      - name: Build Docker image
        run: sudo docker build -t kandula17/devops-internal:${{ env.IMAGE_TAG }} .
 
      - name: Push Docker image
        run: sudo docker push kandula17/devops-internal:${{ env.IMAGE_TAG }}


  delpoy:

    needs: [build]
    runs-on: [self-hosted, dev]

    steps:

#      - name: Set up kubectl
#        uses: aws-actions/setup-kubectl@v4
#        with:
#          version: 'latest' # Or a specific version like '1.28.0'

      - name: Update kubeconfig
        run: |
          sudo aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy to EKS using kubectl (Kustomize example)
        run: |
          sudo sed -i "s|kandula17/devops-internal|${{ env.DOCKERHUB_REPOSITORY_NAME }}|g" k8s/api.yaml
          sudo sed -i "s|master|${{ env.IMAGE_TAG }}|g" k8s/api.yaml
          sudo kubectl apply -f k8s/api.yaml --validate=false
